import pygame
import random

# Initialisation de Pygame
pygame.init()

# Dimensions de l'écran
screen_width = 800
screen_height = 600

# Couleurs
white = (255, 255, 255)

# Création de la fenêtre du jeu
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Coin Collector")

# Chargement des images
player_img = pygame.image.load("player.png")
coin_img = pygame.image.load("coin.png")
obstacle_img = pygame.image.load("obstacle.png")

# Position initiale du joueur
player_x = screen_width // 2
player_y = screen_height - 100

# Position initiale des pièces de monnaie
coin_x = random.randint(0, screen_width - coin_img.get_width())
coin_y = -coin_img.get_height()

# Position initiale des obstacles
obstacle_x = random.randint(0, screen_width - obstacle_img.get_width())
obstacle_y = -obstacle_img.get_height()

# Variables pour la vitesse de déplacement
player_speed = 5
coin_speed = 3
obstacle_speed = 5

# Boucle principale du jeu
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Déplacement du joueur
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < screen_width - player_img.get_width():
        player_x += player_speed

    # Déplacement de la pièce de monnaie
    coin_y += coin_speed
    if coin_y > screen_height:
        coin_x = random.randint(0, screen_width - coin_img.get_width())
        coin_y = -coin_img.get_height()

    # Déplacement de l'obstacle
    obstacle_y += obstacle_speed
    if obstacle_y > screen_height:
        obstacle_x = random.randint(0, screen_width - obstacle_img.get_width())
        obstacle_y = -obstacle_img.get_height()

    # Détection de collision entre le joueur et la pièce de monnaie
    if player_x < coin_x + coin_img.get_width() and \
            player_x + player_img.get_width() > coin_x and \
            player_y < coin_y + coin_img.get_height() and \
            player_y + player_img.get_height() > coin_y:
        coin_x = random.randint(0, screen_width - coin_img.get_width())
        coin_y = -coin_img.get_height()

    # Détection de collision entre le joueur et l'obstacle
    if player_x < obstacle_x + obstacle_img.get_width() and \
            player_x + player_img.get_width() > obstacle_x and \
            player_y < obstacle_y + obstacle_img.get_height() and \
            player_y + player_img.get_height() > obstacle_y:
        running = False  # Le jeu se termine en cas de collision avec un obstacle

    # Affichage des éléments du jeu
    screen.fill(white)
    screen.blit(player_img, (player_x, player_y))
    screen.blit(coin_img, (coin_x
